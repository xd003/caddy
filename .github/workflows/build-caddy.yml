name: Build and Push Caddy Docker Image

on:
  push:
    branches: [ main ]
  schedule:
    # Check for new Caddy releases daily at midnight
    - cron: '0 0 * * *'
  workflow_dispatch:
    # Manual trigger option

jobs:
  check-caddy-version:
    runs-on: ubuntu-latest
    outputs:
      latest_version: ${{ steps.get-latest-version.outputs.version }}
      version_changed: ${{ steps.compare-version.outputs.changed }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Get latest Caddy version
        id: get-latest-version
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/caddyserver/caddy/releases/latest | jq -r '.tag_name' | sed 's/^v//')
          echo "Latest Caddy version: $LATEST_VERSION"
          echo "version=$LATEST_VERSION" >> $GITHUB_OUTPUT
      
      - name: Extract current version from Dockerfile
        id: current-version
        run: |
          CURRENT_VERSION=$(grep "ARG CADDY_VERSION=" Dockerfile | cut -d= -f2)
          echo "Current Caddy version: $CURRENT_VERSION"
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
      
      - name: Compare versions
        id: compare-version
        run: |
          if [ "${{ steps.get-latest-version.outputs.version }}" != "${{ steps.current-version.outputs.version }}" ]; then
            echo "Caddy version has changed!"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "Caddy version is already up to date."
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    runs-on: ubuntu-latest
    needs: check-caddy-version
    # Run on push or when version has changed
    if: github.event_name == 'push' || needs.check-caddy-version.outputs.version_changed == 'true'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Update Caddy version in Dockerfile
        if: needs.check-caddy-version.outputs.version_changed == 'true'
        run: |
          NEW_VERSION="${{ needs.check-caddy-version.outputs.latest_version }}"
          sed -i "s/ARG CADDY_VERSION=.*/ARG CADDY_VERSION=$NEW_VERSION/" Dockerfile
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add Dockerfile
          git commit -m "Update Caddy version to $NEW_VERSION"
          git push
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ needs.check-caddy-version.outputs.latest_version }}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
